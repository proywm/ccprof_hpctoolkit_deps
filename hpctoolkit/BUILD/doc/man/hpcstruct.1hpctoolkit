'\" t
.\" Manual page created with latex2man on Mon Nov 20 15:36:21 EST 2017
.\" NOTE: This file is generated, DO NOT EDIT.
.de Vb
.ft CW
.nf
..
.de Ve
.ft R

.fi
..
.TH "HPCSTRUCT" "1" " 2011/02/22" "The HPCToolkit Performance Tools " "The HPCToolkit Performance Tools "
.SH NAME

.PP
hpcstruct
recovers the static program structure of \fIfully optimized\fP
object code for use with an \fBHPCToolkit\fP
correlation tool. 
In particular, hpcstruct,
recovers source code procedures and loop nests, detects inlining, and associates procedures and loops with object code addresses. 
See \fIhpctoolkit\fP(1)
for an overview of \fBHPCToolkit\fP\&.
.PP
.SH SYNOPSIS

.PP
hpcstruct
[\fBoptions\fP]
\fIbinary\fP
.PP
Typical usage:
.br
\fB \fP\fB \fP\fB \fPhpcstruct
\fIbinary\fP
.br
which creates basename(\fIbinary\fP).hpcstruct\&.
.PP
.SH DESCRIPTION

.PP
Given an application binary or DSO \fIbinary\fP,
hpcstruct
recovers the program structure of its object code. 
Program structure is a mapping of a program\&'s static source\-level structure to its object code. 
By default, hpcstruct
writes its results to the file basename(<binary>).hpcstruct\&.
This file is typically passed to \fBHPCToolkit\fP\&'s
correlation tool, \fIhpcprof\fP(1)
or \fIhpcprof\-flat\fP(1)
\&.
.PP
hpcstruct
is designed primarily for highly optimized binaries created from C, C++ and Fortran source code. 
Because hpcstruct\&'s
algorithms exploit a binary\&'s debugging information, for best results, \fIbinary\fP
should be compiled with standard debugging information. 
.PP
.SH ARGUMENTS

.PP
.TP
\fIbinary\fP
 An executable binary or dynamically linked library. 
Note that hpcstruct
does not recover program structure for libraries that \fIbinary\fP
depends on. To create such information, run hpcstruct on each dynamically linked library (or relink your program with static versions of the libraries). 
.PP
Default values for an option\&'s optional arguments are shown in {}\&. 
.PP
.SS OPTIONS: INFORMATIONAL
.PP
.TP
\fB\-v\fP [\fIn\fP], \fB\-\-verbose\fP [\fIn\fP]
 Verbose: generate progress messages to stderr at verbosity level \fIn\fP\&.
{1} 
.PP
.TP
\fB\-V\fP, \fB\-\-version\fP
 Print version information. 
.PP
.TP
\fB\-h\fP, \fB\-\-help\fP
 Print help. 
.PP
.TP
\fB\-\-debug\fP [\fIn\fP]
 Debug: use debug level \fIn\fP\&.
{1} 
.PP
.TP
\fB\-\-debug\-proc\fP \fIglob\fP
 Debug structure recovery for procedures matching the procedure glob \fIglob\fP\&.
.PP
.SS OPTIONS: STRUCTURE RECOVERY
.PP
.TP
\fB\-I\fP \fIpath\fP, \fB\-\-include\fP \fIpath\fP
 Use \fIpath\fP
when resolving source file names. 
This option is useful when a compiler records the same filename in \fIdifferent\fP
ways within the symbolic information. 
(Yes, this does happen.) 
For a recursive search, append a \&'+\&' after the last slash, e.g., /mypath/+\&.
May pass multiple times. 
.PP
.TP
\fB\-\-loop\-intvl\fP \fIyes|no\fP
 Should loop recovery heuristics assume an irreducible interval is a loop? {yes}\&. 
.PP
.TP
\fB\-\-loop\-fwd\-subst\fP \fIyes|no\fP
 Should loop recovery heuristics assume forward substitution may occur? {yes}\&. 
.PP
.TP
\fB\-N\fP \fIall|safe|none\fP, \fB\-\-normalize\fP \fIall|safe|none\fP
 Specify normalizations to apply to program structure. {all} 
.RS
.TP
.B *
\fBall\fP: apply all normalizations
.TP
.B *
\fBsafe\fP: apply only safe normalizations
.TP
.B *
\fBnone\fP: apply no normalizations
.RE
.RS
.PP
.RE
.TP
\fB\-R\fP \fI\&'old\-path=new\-path\&'\fP, \fB\-\-replace\-path\fP \fI\&'old\-path=new\-path\&'\fP
 Substitute instances of \fIold\-path\fP
with \fInew\-path\fP;
apply to all paths (e.g., a profile\&'s load map and source code) for which \fIold\-path\fP
is a prefix. Use \&'
.br\&'to escape instances of \&'=\&' within a path. May pass multiple times. 
.PP
Use this option when a profile or binary contains references to files that have been relocated, such as might occur with a file system change. 
.PP
.SS OPTIONS: OUTPUT
.PP
.TP
\fB\-o\fP \fIfile\fP, \fB\-\-output\fP \fIfile\fP
 Write results to \fIfile\fP\&.
Use `\-\&' for stdout\&.
{basename(\fIbinary\fP).hpcstruct}
.PP
.TP
\fB\-\-compact\fP
 Generate compact output, eliminating extra white space. 
.PP
.SH EXAMPLES

.PP
Assume we have collected profiling information for the (optimized) binary sweep3dsingle,
compiled with debugging information. 
We wish to recover program structure in the file sweep3dsingle.hpcstruct
for use with \fIhpcprof\fP(1)
or \fIhpcprof\-flat\fP(1)
\&.
To do this, execute: 
.Vb
    hpcstruct sweep3dsingle
.Ve
.PP
.SH NOTES

.PP
.TP
1.
For best results, an application binary should be compiled with debugging information. 
To generate debugging information while also enabling optimizations, use the appropriate variant of \-g for the following compilers: 
.RS
.TP
.B *
GNU compilers: \-g 
.TP
.B *
Intel compilers: \-g \-debug inline_debug_info 
.TP
.B *
PathScale compilers: \-g 
.TP
.B *
PGI compilers: \-gopt 
.RE
.RS
.PP
.RE
.TP
2.
While hpcstruct attempts to guard against inaccurate debugging information, some compilers (notably PGI\&'s) often generate invalid and inconsistent debugging information.
Garbage in; garbage out. 
.PP
.TP
3.
C++ mangling is compiler specific. On non\-GNU platforms, hpcstruct
tries both platform\&'s and GNU\&'s demangler. 
.PP
.SH BUGS

.PP
.TP
1.
hpcstruct may incorrectly infer the structure of loops contained within switch statements.
When reconstructing the control flow graph (CFG) of the object code, hpcstruct
currently ignores indirect jumps and does not add edges from the jump to possible target basic blocks. 
The result is an incomplete CFG and a misleading loop nesting tree. 
The workaround is to use an if/elseif/else statement. 
.PP
.SH SEE ALSO

.PP
\fIhpctoolkit\fP(1)
\&.
.PP
.SH VERSION

.PP
Version: 2017.11 of  2011/02/22\&.
.PP
.SH LICENSE AND COPYRIGHT

.PP
.TP
Copyright 
(C)2002\-2017, Rice University. 
.TP
License 
See README.License\&.
.PP
.SH AUTHORS

.PP
Nathan Tallent 
.br
John Mellor\-Crummey 
.br
Rob Fowler 
.br
Rice HPCToolkit Research Group 
.br
Email: \fBhpctoolkit\-forum =at= rice.edu\fP
.br
WWW: \fBhttp://hpctoolkit.org\fP\&.
.PP
Thanks to Gabriel Marin and Jason Eckhardt. 
.PP
.\" NOTE: This file is generated, DO NOT EDIT.
